robot_radius: 0.25
footprint_padding: 0.02
robot_base_frame: base_footprint
update_frequency: 5.0
publish_frequency: 5.0
transform_tolerance: 1.0
publish_voxel_map: false
resolution: 0.01

obstacle_range: 2.5
raytrace_range: 3.0
static:
  map_topic: map
  subscribe_to_updates: true
  lethal_cost_threshold: 50

obstacles_laser:
  observation_sources: laser
  laser: {data_type: LaserScan, sensor_frame: laser, topic: /scan, marking: true, clearing: true, min_obstacle_height: -0.05, obstacle_range: 5.0, raytrace_range: 6.0, inf_is_valid: true}

inflation:
  inflation_radius: 0.1
  cost_scaling_factor: 0.1




# map_type: voxel

# #Voxel grid specific parameters
# origin_z: 0.0
# z_resolution: 0.2
# z_voxels: 10
# unknown_threshold: 9
# mark_threshold: 0

# #Set the tolerance we're willing to have for tf transforms
# transform_tolerance: 0.3

# #Obstacle marking parameters
# obstacle_range: 0.5
# max_obstacle_height: 2.0
# raytrace_range: 0.3

# #The footprint of the robot and associated padding
# robot_radius: 0.27
# # footprint: [[-0.325, -0.325], [-0.325, 0.325], [0.325, 0.325], [0.46, 0.0], [0.325, -0.325]]
# footprint_padding: 0.01

# #Cost function parameters
# inflation_radius: 0.1
# cost_scaling_factor: 2.0

# #The cost at which a cell is considered an obstacle when a map is read from the map_server
# lethal_cost_threshold: 100

# #Configuration for the sensors that the costmap will use to update a map
# observation_sources: base_scan
# base_scan: {data_type: LaserScan, expected_update_rate: 0.4, topic: scan,
#   observation_persistence: 0.0, marking: true, clearing: true, max_obstacle_height: 0.4, min_obstacle_height: 0.08}

# # plugins: 
# #     - {name: static_map,       type: "costmap_2d::StaticLayer"}
# #     - {name: obstacles,        type: "costmap_2d::VoxelLayer"}
# # publish_frequency: 1.0
# # obstacles:
# #     observation_sources: base_scan
# #     base_scan: {data_type: LaserScan, sensor_frame: /laser, clearing: true, marking: true, topic: /scan}